#!/bin/bash

if [[ $1 == '' || $1 == '-h' || $1 == '--help' ]] ; then
	cat ./GetIMDB-ApiInfo.txt
else
type=""
	date=""
	orig=""
	opt1=$4

	if [ $1 != "all" ] ; then type="title_type="$1"&"        	 ; fi
	if [ $2 != "all" ] ; then date="release_date=$2-01-01,$2-12-31&" ; fi
	if [ $3 != "all" ] ; then orig="&countries="$3    		 ; fi

	declare -i page=1
	declare -i limi=$5
	declare -i coun=$(($limi>250|$limi==0?250:$limi))
	declare -i len=0
	declare -i len_genr=0
	declare -i len_name=0
	declare -i len_year=0

	key=true

	while $key; do
		link="https://www.imdb.com/search/title/?"$type$date"count="$coun"&start=$page"$orig"&"$opt1"&view=advanced"
		curl -s -L --compressed -H "Accept-Encoding: gzip, deflate" $link > $HOME/.get-imdb-api-info-page.log
		page+=$coun
		len=0
		len_genr=0
	        len_name=0
	        len_year=0

		echo $(date +"%d/%m/%Y %T") $link >> "$HOME/.GetIMDBApi.log"

		num=$(cat $HOME/.get-imdb-api-info-page.log | grep -oP '(?<=<span>).*?(?=titles.</span>)' | sort -u)
		echo $num $link
		echo ""

		status=$(echo $num | sed 's/.*-//g' | sed 's/ of /:/g' | sed 's/,//g')

		cat $HOME/.get-imdb-api-info-page.log 	| grep '<h3 class="lister-item-header">' -A1 | grep -oP '(?<=>).*?(?=<)' > $HOME/.get-imdb-api-info-numb.log
		awk '/<div class="lister-item-content">/{n++}{print >"'$HOME/'.get-imdb-api-info" n ".log" }' $HOME/.get-imdb-api-info-page.log

		for n in $(seq 1 $(wc -l < $HOME/.get-imdb-api-info-numb.log)); do
			len=$(cat $HOME/.get-imdb-api-info$n.log | grep -A1 '<span class="genre">' | grep '</span>' | grep -oP '(?<=^).*?(?=  )' | wc -m)+5
			if [ $len -gt $len_genr ] ; then
				len_genr=$len
			fi

			epis=$(cat $HOME/.get-imdb-api-info$n.log | grep '<small class="text-primary unbold">Episode:</small>' -A3 | grep -oP '(?<=>).*?(?=</small>)')
                        if [ "$epis" = "Episode:" ]; then
                                epnm=$(cat $HOME/.get-imdb-api-info$n.log | grep '<small class="text-primary unbold">Episode:</small>' -A3 | grep -oP '(?<=>).*?(?=</a>)')
                                epye=$(cat $HOME/.get-imdb-api-info$n.log | grep '<small class="text-primary unbold">Episode:</small>' -A3 | grep -oP '(?<=>).*?(?=</span>)' | tr -d '(|)')
                                epis="($epis $epnm - $epye)"
                        else
                                epis=""
                                epnm=""
                                epye=""
                        fi

			len=$(echo $epis | wc -m)
			len+=$(cat $HOME/.get-imdb-api-info$n.log | grep '<h3 class="lister-item-header">' -A4 | grep -oP '(?<=>).*?(?=</a>)' | sed 's/^ //g' | wc -m)+5
                        if [ $len -gt $len_name ] ; then
                                len_name=$len
                        fi

			len=$(cat $HOME/.get-imdb-api-info$n.log | grep '<h3 class="lister-item-header">' -A5 | grep -oP '(?<=year text-muted unbold">).*?(?=</span>)' | tr -d '(|)' | wc -m)+5
                        if [ $len -gt $len_year ] ; then
                                len_year=$len
                        fi
		done

		tab_title="%-15s%-15s%-"$len_name"s%-15s%-15s%-"$len_genr"s%-"$len_year"s%-15s%-15s\n"
		echo -e | awk '{ printf "'$tab_title'","N°","Código","Descrição","Nota","Duração","Gênero","Ano","Votos","Custo\n"; }'

		for n in $(seq 1 $(wc -l < $HOME/.get-imdb-api-info-numb.log)); do
			numb=$(cat $HOME/.get-imdb-api-info$n.log | grep '<h3 class="lister-item-header">' -A1 | grep -oP '(?<=>).*?(?=<)' | tr -d ',|.')
			code=$(cat $HOME/.get-imdb-api-info$n.log | grep '<h3 class="lister-item-header">' -A3 | grep -oP '(?<=title/tt).*?(?=/)')
			name=$(cat $HOME/.get-imdb-api-info$n.log | grep '<h3 class="lister-item-header">' -A4 | grep -oP '(?<=>).*?(?=</a>)' | sed 's/^ //g')
			note=$(cat $HOME/.get-imdb-api-info$n.log | grep '        <strong>' | grep -oP '(?<=>).*?(?=<)')
			runt=$(cat $HOME/.get-imdb-api-info$n.log | grep '<span class="runtime">' | grep -oP '(?<=>).*?(?=</span>)' | sed 's/     / /g')
			genr=$(cat $HOME/.get-imdb-api-info$n.log | grep -A1 '<span class="genre">' | grep '</span>' | grep -oP '(?<=^).*?(?=  )')
			year=$(cat $HOME/.get-imdb-api-info$n.log | grep '<h3 class="lister-item-header">' -A5 | grep -oP '(?<=year text-muted unbold">).*?(?=</span>)' | tr -d '(|)')
			vote=$(cat $HOME/.get-imdb-api-info$n.log | grep '<span class="text-muted">Votes:</span>' -A1 | grep 'data-value' | grep -oP '(?<=>).*?(?=</span>)' | tr -d 'Votes:')
			cous=$(cat $HOME/.get-imdb-api-info$n.log | grep '<span class="text-muted">Gross:</span>' -A1 | grep '<span name="nv" data-value' | grep -oP '(?<=>).*?(?=</span>)')
			epis=$(cat $HOME/.get-imdb-api-info$n.log | grep '<small class="text-primary unbold">Episode:</small>' -A3 | grep -oP '(?<=>).*?(?=</small>)')

			if [ "$epis" = "Episode:" ]; then
				epnm=$(cat $HOME/.get-imdb-api-info$n.log | grep '<small class="text-primary unbold">Episode:</small>' -A3 | grep -oP '(?<=>).*?(?=</a>)')
				epye=$(cat $HOME/.get-imdb-api-info$n.log | grep '<small class="text-primary unbold">Episode:</small>' -A3 | grep -oP '(?<=>).*?(?=</span>)' | tr -d '(|)')
				epis="($epis $epnm - $epye)"
			else
				epis=""
				epnm=""
				epye=""
			fi

			echo -e | awk "{ printf \"$tab_title\",\"$numb\",\"$code\",\"$name$epis\",\"$note\",\"$runt\",\"$genr\",\"$year\",\"$vote\",\"$cous\"; }"

			#if [[ $6 == 'true' && !( -f $path"/All/"$code".nfo") ]] ; then
			#	python3.10 /bin/GetIMDB-Apimkfolder $code
			#fi
		done

		echo ""
		rm $HOME/.get-imdb-api-info*

		array=(${status//:/ })

		if [ $limi == 0 ] ; then
			limi=${array[1]}
		fi

		if [[ ${array[0]} == ${array[1]} || $status != *":"* || ${array[0]} == $limi ]] ; then
			key=false
		else
			echo -e "Aguarde...\n"
		fi

		trap "echo; exit" INT
	done

	echo -e "Comando concluído!\n"
fi
